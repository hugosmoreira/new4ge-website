rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // News collection
    match /news/{newsId} {
      allow read: if true; // Public access for reading news
      allow write: if isAuthenticated(); // Only authenticated users can write
    }

    // Matches collection
    match /matches/{matchId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Players collection
    match /players/{playerId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
  }
}